theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
png("thirtySixLinesPNG.png", width = 800, height = 500)
par(bg = "transparent")
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
ggplot(data = thirtySixLines) +
geom_point(mapping = aes(x = longitude, y = latitude), colour = thirtySixLines$district) +
scale_fill_manual(values=c("#009C3B", "#FFDF00", "#002776"))
png("thirtySixLinesPNG.png", width = 800, height = 500)
par(bg = "transparent")
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
png("thirtySixLinesPNG.png", width = 800, height = 500)
par(bg = NA)
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
png(width = 800, height = 500)
par(bg = NA)
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
dev.copy(png, "transparent0.png")
dev.off()
pdf("thirtySixLines.pdf", width = 8, height = 5)
par(bg = NA)
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
#dev.copy(png, "transparent0.png")
dev.off()
pdf("thirtySixLines.pdf", width = 8, height = 5, bg = "tranparent")
pdf("thirtySixLines.pdf", width = 8, height = 5, bg = "transparent")
#par(bg = NA)
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
#dev.copy(png, "transparent0.png")
dev.off()
pdf("thirtySixLines.pdf", width = 8, height = 5, bg = NA)
#par(bg = NA)
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
#dev.copy(png, "transparent0.png")
dev.off()
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
#dev.copy(png, "transparent0.png")
ggsave("thirtySixBlank.png", background = "transparent")
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
#dev.copy(png, "transparent0.png")
ggsave("thirtySixBlank.png", bg = "transparent")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("sf")
library("RSQLite", "rgeos")
library("maps")
library("gpclib", "ggmap")
library("data.table")
library("tmap")
library("dplyr")
library("plotrix")
library("viridis")
tmap_mode("plot")
ggplot(data = thirtySixLines) +
geom_point(mapping = aes(x = longitude, y = latitude), colour = thirtySixLines$district) +
scale_fill_manual(values=c("#009C3B", "#FFDF00", "#002776"))
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
colnames(thisDay)[colnames(thisDay) == "line"] <- "busLine"                                           # "line" and "time"is within R syntax so change column names
colnames(thisDay)[colnames(thisDay) == "time"] <- "rioTime"
thirtySixLines <- thisDay %>% filter(busLine %in% buses$busLine)                                        # reduce to 200k rows for thirty-six buslines
thirtySixLines <- subset(thirtySixLines, rioTime > "08:00:00" & rioTime < "10:00:00")
thirtySixLines <- thirtySixLines[with(thirtySixLines, order(thirtySixLines$rioTime)), ]              # order by time
thirtySixLines[, "district"] <- "empty"
rownames(thirtySixLines) <- 1:nrow(thirtySixLines)
# add district labels to colour the bus lines
for (getDistrict in 1:length(thirtySixLines$district)){
forThisBus <- thirtySixLines$busLine[getDistrict]
thirtySixLines$district[getDistrict] <- toString(buses$district[which(buses$busLine == forThisBus)][1])
if (getDistrict %% 6000 == 0){
print(paste0("getDistrict at row ", getDistrict))
}
}
# ggplot(thirtySixLines, aes(longitude, latitude))+
#   geom_point(aes(colour = busLine)) +
#    scale_color_viridis(discrete = FALSE, option = "C")+
#    scale_fill_viridis(discrete = FALSE) +
#    theme_minimal() +
#    theme(legend.position = "bottom")
#par(bg = NA)
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
#dev.copy(png, "transparent0.png")
ggsave("thirtySixBlank.png", bg = "transparent")
ggplot(thirtySixLines, aes(x = longitude, y = latitude, colour = district)) +
geom_point(size = 0.2, alpha = 0.9) +
labs(title = "36 bus routes through districts during morning peak Monday 28th Jan 2019") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
```{r setup, include = FALSE}
library("tidyverse")
library("raster")
tmap_mode("plot")
#knitr::opts_chunk$set(echo = FALSE)
library("tidyverse")
library("raster")
#library("sf")
#library("RSQLite", "rgeos")
#library("maps")
#library("gpclib", "ggmap")
#library("data.table")
setwd("/home/jay/R/CASA0011abm")
import0 <- ('GRAY_50M_SR_400pxHigh_tif.tif')
raster0 = raster(import0)
raster0
raster0(head)
raster0.head
head.raster0
head(raster0)
source('~/Downloads/citiesAQI/R/etl-aqiFromAPI-6.R', echo=TRUE)
aqiIndexDF0
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
tryCatch(response <- fromJSON(txt = thisStation), warning = function(w) {print("NaN");
"NaN"}, error = function(e) {print("NaN");
"NaN"})
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
tryCatch(response <- fromJSON(txt = thisStation), warning = function(w) {print("NaN");
NaN}, error = function(e) {print("NaN");
NaN})
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
tryCatch(response <- fromJSON(txt = thisStation), warning = function(w) {print("NaN");
NaN}, error = function(e) {print("NaN");
NaN;
silent = T})
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
tryCatch(response <- fromJSON(txt = thisStation), .e = ~ paste0("NaN", .x), .w = ~ paste0("NaN", .x))
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
try_catch(response <- fromJSON(txt = thisStation), .e = ~ paste0("NaN", .x), .w = ~ paste0("NaN", .x))
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
tryCatch(response <- fromJSON(txt = thisStation), .e = ~ paste0("NaN", .x), .w = ~ paste0("NaN", .x))
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
response <- tryCatch(fromJSON(txt = thisStation), .e = ~ paste0("NaN", .x), .w = ~ paste0("NaN", .x))
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiStationAddresses
aqiStationAddresses.head
aqiStationAddresses.head()
head(aqiStationAddresses)
head(aqiStationAddresses, 10)
head(10, aqiStationAddresses)
?head
head(aqiStationAddresses, n = 10)
head(aqiStationAddresses, [10])
head(aqiStationAddresses[[1]], 10)
fromJSON(txt = "http://api.waqi.info/feed/@1290/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
head(aqiStationAddresses[[1]], 15)
fromJSON(txt = "http://api.waqi.info/feed/@1303/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@1304/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@1305/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@1305/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@1304/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
#try(response <- fromJSON(txt = thisStation))
response <- tryCatch(fromJSON(txt = thisStation), .e = ~ paste0("NaN", .x), .w = ~ paste0("NaN", .x))
print(thisRow)
#print(response$data$city$name)
aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiStationAddresses[[1]][14]
fromJSON(txt = aqiStationAddresses[[1]][14])
fromJSON(txt = aqiStationAddresses[[1]][14])
response <- fromJSON(txt = aqiStationAddresses[[1]][14])
response
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow, response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] = list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow, response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
print(response)
response
response$data$city$geo
response$data$city$geo[2]
response$data$[1][1]
response$data$[2][1]
response$data
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow, response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 10:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
length(aqiStations)
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.001)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
#Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiStationAddresses[[1]][3]
fromJSON(txt = "http://api.waqi.info/feed/@1292/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@2/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@0/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@30000/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@20000/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@15000/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@15005/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@9005/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12005/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@11005/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@11705/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12705/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@18705/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@14705/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@14712/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@13712/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@13612/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@13603/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12603/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12903/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12890/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12888/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
fromJSON(txt = "http://api.waqi.info/feed/@12868/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947")
list10 <- 1:20
list10
?head
head(list10, 5)
head(aqiCSV, 5)
head(aqiStations, 5)
idRange <- 0:20
idRange
idRange[1]
idRange[2]
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))
idRangeString
aqiStations
idRangeString
twentyStations <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", aqiStations[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
twentyStations
idRange <- 0:13000
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", aqiStations[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
tail(aqiStationAddresses, 5)
tail(aqiStationAddresses, n = 5L)
tail(aqiStationAddresses)
tail(aqiStationAddresses, n = 6L)
idRange <- 0:13
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
idRangeString
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiStationAddresses
idRange <- 0:13000
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiIndexDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiIndexDF0[nrow(aqiIndexDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
aqiIndexDF0
write.csv?
?
x
?write.csv
pwd
dir()
setwd("results")
dir()
?write_csv
write_csv(aqiIndexDF0, na = "NA", append = FALSE, col_names = TRUE)
write_csv(aqiIndexDF0, path = '/home/jay/Downloads/citiesAQI/R/results', na = 'NA', append = FALSE, col_names = TRUE)
write_csv(aqiIndexDF0, path = '/home/jay/Downloads/citiesAQI/R/results/aqiStations0.csv', na = 'NA', append = FALSE, col_names = TRUE)
idRange <- 0:130
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiStationsDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiStationsDF0[nrow(aqiStationsDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
write_csv(aqiStationsDF0, path = '/home/jay/Downloads/citiesAQI/R/results/aqiStations0-0.csv', na = 'NA', append = FALSE, col_names = TRUE)
#idRange <- 0:13000
idRange <- 0:13000
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiStationsDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiStationsDF0[nrow(aqiStationsDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
write_csv(aqiStationsDF0, path = '/home/jay/Downloads/citiesAQI/R/results/aqiStations0-1.csv', na = 'NA', append = FALSE, col_names = TRUE)
write_csv(aqiIndexDF0, path = '/home/jay/Downloads/citiesAQI/R/results/aqiStations0.csv', na = 'NA', append = FALSE, col_names = TRUE)
testList <- 1:6
testList
goTime <- Sys.time()
#idRange <- 0:13000
idRange <- 3999:9000
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiStationsDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiStationsDF0[nrow(aqiStationsDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
write_csv(aqiStationsDF0, path = '/home/jay/Downloads/citiesAQI/R/results/aqiStations0-1.csv', na = 'NA', append = TRUE, col_names = TRUE)
stopTime <- Sys.time()
print('Results fetched in ', stopTime - goTime, 'seconds')
goTime <- Sys.time()
stopTime <- Sys.time()
timeTaken <- stopTime - goTime
timeTaken <- stopTime - goTime
print('Results fetched in ', timeTaken, 'seconds')
print('Results fetched in ' timeTaken 'seconds')
print('Results fetched in ' + timeTaken + 'seconds')
timeTaken
idRange <- 6000:6005
idRange
goTime <- Sys.time()
#idRange <- 0:13000
idRange <- 3999:4999
idRangeString <- lapply(idRange, function(x) toString(x, width = NULL))        # single-column DF of strings with a strange [[x]] CRLF [1] "3211" appearance
aqiStationAddresses <- lapply(idRangeString[1], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiStationsDF0 <- data.frame('stationIDX', 'lat', 'lon', 'name', 'url', stringsAsFactors = FALSE)
for (thisRow in 1:length(aqiStations)) {
thisStation <- aqiStationAddresses[[1]][thisRow]
response <- fromJSON(txt = thisStation)
print(thisRow)
print(response$data$city$name)
try(aqiStationsDF0[nrow(aqiStationsDF0) + 1,] <- list(response$data$idx, response$data$city$geo[1], response$data$city$geo[2],response$data$city$name, response$data$city$url), silent = TRUE)
Sys.sleep(0.1)                                                      # capital Sys
}
write_csv(aqiStationsDF0, path = '/home/jay/Downloads/citiesAQI/R/results/aqiStations0-1.csv', na = 'NA', append = TRUE, col_names = TRUE)
stopTime <- Sys.time()
timeTaken <- stopTime - goTime
print(timeTaken)
head(aqiStationAddresses, 4)
idRangeString[]
idRangeString[1]
idRangeString[0]
idRangeString[1][0]
idRangeString[1][1]
idRangeString[[1]]
aqiStationAddresses <- lapply(idRangeString[[1]], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[[]], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
head(aqiStationAddresses)
aqiStationAddresses <- lapply(idRangeString[[1]], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
aqiStationAddresses <- lapply(idRangeString[[1]], function(x) paste0("http://api.waqi.info/feed/@", idRangeString[], "/?token=67d23a5ad81a0557c4be19eb43dbc1d10eeaf947"))
head(aqiStationAddresses)
seq(0, 12000, by = 3000)
fullRange <- seq(0, 12000, by = 3000)
fullRange[0]
fullRange[1]
fullRange[2]
idStart <- fullRnage[1]
idStart <- fullRange[1]
idStart
idRange <- idStart:(idStart + 5)
idRange
?Sys.sleep
Sys.sleep(15)
print(timeTaken)
print(idStart + "section finished." + timeTaken)
print(idRange + "section finished." + timeTaken)
idRange
idRange[1]
idRange[2]
print(idRange[0] + "section finished." + timeTaken)
print(idRange[[0]] + "section finished." + timeTaken)
print(idRange[1] + "section finished." + timeTaken)
idRange[1][1]
idRange[2][1]
idRange[2][2]
str(idRange[1])
str(idRange[2])
print(str(idRange[1]) + "section finished." + timeTaken)
print("section finished" + timeTaken)
